package com.interest.mm.borrowinginterest;import android.content.Context;import android.os.Bundle;import android.support.v7.app.AppCompatActivity;import android.support.v7.widget.LinearLayoutManager;import android.support.v7.widget.OrientationHelper;import android.support.v7.widget.RecyclerView;import android.text.TextUtils;import android.util.Log;import android.view.View;import android.widget.AdapterView;import android.widget.EditText;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.RelativeLayout;import android.widget.Spinner;import android.widget.TextView;import com.wdullaer.materialdatetimepicker.date.DatePickerDialog;import java.math.BigDecimal;import java.text.DecimalFormat;import java.text.ParseException;import java.util.Arrays;import java.util.Calendar;import java.util.Date;import java.util.List;import butterknife.BindView;import butterknife.ButterKnife;import butterknife.OnClick;/** * 借贷利息计算器 */public class MainActivity extends AppCompatActivity implements DatePickerDialog.OnDateSetListener {    @BindView(R.id.tv_interest_sum)    TextView tvInterestlSum;    @BindView(R.id.et_capital_sum)    EditText etCapitalSum;    @BindView(R.id.im_bank_base)    ImageView imBankBase;    @BindView(R.id.lay_bank_base)    LinearLayout layBankBase;    @BindView(R.id.im_appoint)    ImageView imAppoint;//    @BindView(R.id.sp_loan_time)//    Spinner spLoanTime;    Spinner spLoanTime;    @BindView(R.id.lay_loan_time)    RelativeLayout layLoanTime;    @BindView(R.id.tv_data_begin)    TextView tvDataBegin;    @BindView(R.id.tv_data_end)    TextView tvDataEnd;    @BindView(R.id.et_loan_rate)    EditText etLoanRate;    @BindView(R.id.lay_loan_rate_appoint)    RelativeLayout layLoanRateAppoint;    @BindView(R.id.tv_loan_rate)    TextView tvLoanRate;    @BindView(R.id.lay_loan_rate_bank)    RelativeLayout layLoanRateBank;    @BindView(R.id.sp_loan_rate_multiple)    Spinner spLoanRateMultiple;    @BindView(R.id.lay_loan_rate_multiple)    RelativeLayout layLoanRateMultiple;    @BindView(R.id.tv_account)    TextView tvAccount;    private List<String> loanTimeDat;    private List<String> interestMultipleData;    private SpinnerAdapter loanAdapter;    private SpinnerAdapter interestMultipleAdapter;    private final static int APPOINT = 1;    private final static int BANK_BASE = 2;    private int type = APPOINT;    private final static int BEGIN = 1;    private final static int END = 2;    private Date beginTime;    private Date endTime;    // 利率类型    private int tiemType = BEGIN;    // 贷款期限选择    private int loanTimeType;    // 利率倍数    private int interestMultip = 1;    //计算利息展示    @BindView(R.id.ll_calculate_detail)    LinearLayout ll_calculate_detail;    // 利率    @BindView(R.id.tv_value)    TextView    tv_value;    //计息天数    @BindView(R.id.tv_days)    TextView    tv_days;    // 借贷利息    @BindView(R.id.tv_com)    TextView    tv_com;    @BindView(R.id.tv_loan_time)    TextView textView;    //合计    @BindView(R.id.tv_total)    TextView tv_total;    @BindView(R.id.rlt_calculation_all)    LinearLayout rlt_calculation_all;    @BindView(R.id.rv_calculation_all)    RecyclerView rv_calculation_all;    CalculationInfoAdapter calculationInfoAdapter;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_load_interest);        ButterKnife.bind(this);        spLoanTime=findViewById(R.id.sp_loan_time);    init();    }    private void init() {        loanTimeDat = Arrays.asList(getResources().getStringArray(R.array.loan_time));        interestMultipleData = Arrays.asList(getResources().getStringArray(R.array.interest_multiple));        loanAdapter = new SpinnerAdapter(this, R.layout.spinner_item, R.id.tvCateItem, loanTimeDat);        interestMultipleAdapter = new SpinnerAdapter(this, R.layout.spinner_item, R.id.tvCateItem, interestMultipleData);        spLoanTime.setAdapter(loanAdapter);        spLoanRateMultiple.setAdapter(interestMultipleAdapter);        spLoanTime.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {            @Override            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {                loanTimeType = position;                tvLoanRate.setText(String.valueOf(BankBaseInterest.interestValue[BankBaseInterest.interestValue.length - 1][position]));            }            @Override            public void onNothingSelected(AdapterView<?> parent) {            }        });        spLoanRateMultiple.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {            @Override            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {                interestMultip = position + 1;            }            @Override            public void onNothingSelected(AdapterView<?> parent) {            }        });        //设置增加或删除条目的动画        //rv_calculation_all.setItemAnimator(new DefaultItemAnimator());    }    @OnClick({R.id.im_bank_base, R.id.im_appoint, R.id.tv_data_begin, R.id.tv_data_end, R.id.tv_account})    public void onViewClicked(View view) {        switch (view.getId()) {            case R.id.im_bank_base:                ll_calculate_detail.setVisibility(View.GONE);                rlt_calculation_all.setVisibility(View.GONE);                type = BANK_BASE;                imAppoint.setBackground(getResources().getDrawable(R.drawable.unselect));//约定                imBankBase.setBackground(getResources().getDrawable(R.drawable.selected));                layLoanTime.setVisibility(View.VISIBLE);                layLoanRateMultiple.setVisibility(View.VISIBLE);                layLoanRateAppoint.setVisibility(View.GONE);                break;            case R.id.im_appoint:                ll_calculate_detail.setVisibility(View.GONE);                rlt_calculation_all.setVisibility(View.GONE);                type = APPOINT;                imAppoint.setBackground(getResources().getDrawable(R.drawable.selected));                imBankBase.setBackground(getResources().getDrawable(R.drawable.unselect));                layLoanTime.setVisibility(View.GONE);                layLoanRateMultiple.setVisibility(View.GONE);                layLoanRateAppoint.setVisibility(View.VISIBLE);                break;            case R.id.tv_data_begin:                tiemType = BEGIN;                selectTime();                break;            case R.id.tv_data_end:                tiemType = END;                selectTime();                break;            case R.id.tv_account:                try {                    accountInterest();                } catch (ParseException e) {                    e.printStackTrace();                }                break;        }    }    private void accountInterest() throws ParseException {        String moneySty = etCapitalSum.getText().toString();        if (TextUtils.isEmpty(moneySty)) {            CustomToast.showToast(this, "本金金额不能为空");            return;        }        if (beginTime == null || endTime == null) {            CustomToast.showToast(this, "起算日期和截止日期不能为空");            return;        }        Log.i("时间戳", ""+beginTime.getTime());        if (beginTime.getTime() >= endTime.getTime()) {            CustomToast.showToast(this, "截止日期必须大于起算日期");            return;        }        if (beginTime.getTime() <=RateOfInterestUtil.getDate("1996-5-31").getTime()) {            Log.i("时间戳", ""+beginTime.getTime());            CustomToast.showToast(this, "起算日期最早为1996-5-31");            return;        }        if (type==1&&TextUtils.isEmpty(etLoanRate.getText().toString().trim())){            CustomToast.showToast(this, "请输入约定利率");            return;        }        DecimalFormat df=new DecimalFormat("0.00");        BigDecimal money = new BigDecimal(moneySty).multiply(new BigDecimal(10000));        FullyLinearLayoutManager mLayoutManager = new FullyLinearLayoutManager(this);        double  numCount=0;        RateOfInterestUtil rateOfInterestUtil = null;        if(type==1){            String  countmoney1=df.format((money.doubleValue()*(Double.parseDouble((etLoanRate.getText().toString()))/                    (360*100))*RateOfInterestUtil.getDays(beginTime,endTime)));            tv_value.setText("银行基准利率:"+etLoanRate.getText()+"%");            tv_days.setText("计息天数(天):"+RateOfInterestUtil.getDays(beginTime,endTime)+"");            tv_com.setText("借贷利息(元)："+money.doubleValue()+"X("+etLoanRate.getText()+"%/360)X"                    +RateOfInterestUtil.getDays(beginTime,endTime)+"="                    +countmoney1);            tvInterestlSum.setText(""+countmoney1);            ll_calculate_detail.setVisibility(View.VISIBLE);        }else {            rateOfInterestUtil=  new RateOfInterestUtil(                    beginTime,endTime,interestMultip,                    loanTimeType,money.doubleValue());            numCount=rateOfInterestUtil.calculateMoney();            tvInterestlSum.setText(df.format(numCount));            List<String> strings;            switch (this.loanTimeType){                case 0:                    strings=rateOfInterestUtil.oneCompelt();                    tv_value.setText(strings.get(0));                    tv_days.setText(strings.get(1));                    tv_com.setText(strings.get(2));                    ll_calculate_detail.setVisibility(View.VISIBLE);                    rlt_calculation_all.setVisibility(View.GONE);                    break;                case 1:                    if(beginTime.getYear()==endTime.getYear())                    {                        rlt_calculation_all.setVisibility(View.GONE);                        strings =rateOfInterestUtil.oneCompelt();                        tv_value.setText(strings.get(0));                        tv_days.setText(strings.get(1));                        tv_com.setText(strings.get(2));                        ll_calculate_detail.setVisibility(View.VISIBLE);                    }else {                        ll_calculate_detail.setVisibility(View.GONE);                        rlt_calculation_all.setVisibility(View.VISIBLE);                        calculationInfoAdapter=new CalculationInfoAdapter(this,rateOfInterestUtil.getallCalculation());                        //设置布局管理器                        rv_calculation_all.setLayoutManager(mLayoutManager);                        //设置为垂直布局，这也是默认的                        mLayoutManager.setOrientation(OrientationHelper.VERTICAL);                        //绑定适配器                        rv_calculation_all.setAdapter(calculationInfoAdapter);                        tv_total.setText(rateOfInterestUtil.getToa());                    }                case 2:                case 3:                case 4:                    ll_calculate_detail.setVisibility(View.GONE);                    //得到适配器对象                    rlt_calculation_all.setVisibility(View.VISIBLE);                    calculationInfoAdapter=new CalculationInfoAdapter(this,rateOfInterestUtil.getallCalculation());                    //设置布局管理器                    LinearLayoutManager layoutManager = new LinearLayoutManager(this);                    rv_calculation_all.setLayoutManager(layoutManager);                    //设置为垂直布局，这也是默认的                    layoutManager.setOrientation(OrientationHelper.VERTICAL);                    //绑定适配器                    rv_calculation_all.setAdapter(calculationInfoAdapter);                    tv_total.setText(rateOfInterestUtil.getToa());                    break;            }        }    }    @Override    public void onDateSet(DatePickerDialog view, int year, int monthOfYear, int dayOfMonth) {        StringBuilder timerBuilder = new StringBuilder();        timerBuilder.append(year).append("-").append((monthOfYear + 1) < 10 ? "0" + (monthOfYear + 1) : monthOfYear + 1).append("-").append(dayOfMonth < 10 ? "0" + dayOfMonth : dayOfMonth).append(" ");        try {            if (tiemType == BEGIN) {                tvDataBegin.setText(timerBuilder);                beginTime = LoanUtil.YMDToStamp(year, monthOfYear, dayOfMonth);                completeDate();            } else {                int num=dayOfMonth-1;                tvDataEnd.setText(timerBuilder);                endTime = LoanUtil.YMDToStamp(year, monthOfYear, num);                Calendar cal = Calendar.getInstance();                cal.setTime(endTime);                cal.add(Calendar.DATE, 1);                endTime = cal.getTime();                completeDate();            }        } catch (ParseException e) {            e.printStackTrace();        }    }    private void completeDate() {        if (beginTime == null || endTime == null) {            return;        }        if (beginTime.getTime() >= endTime.getTime()) {            return;        }        int num= (int) RateOfInterestUtil.getDays(beginTime,endTime);        if(num<=182){            this.loanTimeType= RateOfInterestUtil.RateType.WITHIN_JUNE;            textView.setText("六个月以内（含）");        }else if (num<365 & num>=182){            this.loanTimeType= RateOfInterestUtil.RateType.JUNE_TO_ONE_YEAR;            textView.setText("六个月到一年（含）");        }else if (num<365*3 & num>=365){            this.loanTimeType= RateOfInterestUtil.RateType.ONE_YEAR_TO_THERR_YEARS;            textView.setText("一年到三年（含）");        }else if (num<365*5 & num>=365*3){            this.loanTimeType= RateOfInterestUtil.RateType.THERR_YEARS_TO_FIVE_YESRS;            textView.setText("三年到五年（含）");        }else if ( num>=365*5){            this.loanTimeType= RateOfInterestUtil.RateType.MORE_THAN_FIVE_YEARS;            textView.setText("五年以上（含）");        }    }    private void selectTime() {        Calendar now = Calendar.getInstance();        DatePickerDialog dpd = DatePickerDialog.newInstance(                this,                now.get(Calendar.YEAR),                now.get(Calendar.MONTH),                now.get(Calendar.DAY_OF_MONTH)        );        dpd.show(getFragmentManager(), "Datepickerdialog");    }}